<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2">Edit Code: {{worker.name}}</h1>
  <div class="btn-toolbar mb-2 mb-md-0">
    <a href="/" class="btn btn-sm btn-outline-secondary me-2">
      Back to Dashboard
    </a>
    <a href="/workers/{{worker.name}}/edit" class="btn btn-sm btn-outline-secondary">
      Edit Metadata
    </a>
  </div>
</div>

<div class="row mb-3">
  <div class="col-12">
    <div class="alert alert-info">
      Edit the worker code below. Click "Save" to update the worker and restart the service.
    </div>
  </div>
</div>

<div class="row">
  <div class="col-12">
    <form id="code-form">
      <div class="mb-3">
        <div id="editor-container" style="height: 400px; border: 1px solid #ccc; border-radius: 4px;"></div>
        <textarea id="code-content" name="code" class="d-none">{{code}}</textarea>
      </div>
      
      <div class="mb-3 d-grid gap-2 d-md-flex justify-content-md-end">
        <button type="submit" class="btn btn-primary">Save & Deploy</button>
      </div>
    </form>
  </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.34.0/min/vs/editor/editor.main.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.34.0/min/vs/loader.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    let editor;
    
    // Initialize Monaco Editor
    require.config({ 
      paths: { 'vs': 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.34.0/min/vs' }
    });
    
    require(['vs/editor/editor.main'], function() {
      editor = monaco.editor.create(document.getElementById('editor-container'), {
        value: document.getElementById('code-content').value,
        language: 'javascript',
        theme: 'vs',
        automaticLayout: true,
        minimap: { enabled: true }
      });
      
      // Update textarea when the editor content changes
      editor.onDidChangeModelContent(function() {
        document.getElementById('code-content').value = editor.getValue();
      });
    });
    
    // Handle form submission
    const form = document.getElementById('code-form');
    
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const codeContent = document.getElementById('code-content').value;
      
      try {
        const response = await apiRequest(`/api/workers/{{worker.name}}/code`, 'PUT', { code: codeContent });
        
        if (response.ok) {
          alert('Worker code updated and deployed successfully');
        } else {
          const data = await response.json();
          alert(`Error: ${data.error || 'Failed to update code'}`);
        }
      } catch (error) {
        alert(`Error: ${error.message}`);
      }
    });
  });
</script> 